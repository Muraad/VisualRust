[package]
name = "hello_world"
version = "0.0.1"
authors = ["Your Name <you@example.com>"]


#[features]
# The "default" set of optional packages. Most people will
# want to use these packages, but they are strictly optional.
# Note that `session` is not a package but rather another
# feature listed in this manifest.
#default = ["jquery", "uglifier", "session"]

# The "secure-password" feature depends on the bcrypt package.
# This aliasing will allow people to talk about the feature in
# a higher-level way and allow this package to add more
# requirements to the feature in the future.
#secure-password = ["bcrypt"]

# Features can be used to reexport features of other packages.
# The `session` feature of package `awesome` will ensure that the
# `session` feature of the package `cookie` is also enabled.
#session = ["cookie/session"]

#[dependencies]
# These packages are mandatory and form the core of this
# package's distribution

#[target.x86_64-unknown-linux-gnu.dependencies]

#[target.x86_64-pc-windows-gnu.dependencies]


# The development profile, used for `cargo build`
#[profile.dev]
#opt-level = 0  # Controls the --opt-level the compiler builds with
#debug = true   # Controls whether the compiler passes -g or `--cfg ndebug`
#rpath = false  # Controls whether the compiler passes `-C rpath`
#lto = false    # Controls `-C lto` for binaries and staticlibs
#debug-assertions = true  # Controls whether debug assertions are enabled

# The release profile, used for `cargo build --release`
#[profile.release]
#opt-level = 3
#debug = false
#rpath = false
#lto = false
#debug-assertions = false

# The testing profile, used for `cargo test`
#[profile.test]
#opt-level = 0
#debug = true
#rpath = false
#lto = false
#debug-assertions = true

# The benchmarking profile, used for `cargo bench`
#[profile.bench]
#opt-level = 3
#debug = false
#rpath = false
#lto = false
#debug-assertions = false

# The documentation profile, used for `cargo doc`
#[profile.doc]
#opt-level = 0
#debug = true
#rpath = false
#lto = false
#debug-assertions = true



#[lib]
# The name of a target is the name of the library that will be generated. This
# is defaulted to the name of the package or project.
#name = "foo"

# This field points at where the crate is located, relative to the Cargo.toml.
#path = "src/lib.rs"

# A flag for enabling unit tests for this target. This is used by `cargo test`.
#test = true

# A flag for enabling documentation tests for this target. This is only
# relevant for libraries, it has no effect on other sections. This is used by
# `cargo test`.
#doctest = true

# A flag for enabling benchmarks for this target. This is used by `cargo bench`.
#bench = true

# A flag for enabling documentation of this target. This is used by `cargo doc`.
#doc = true

# If the target is meant to be a compiler plugin, this field must be set to true
# for cargo to correctly compile it and make it available for all dependencies.
#plugin = false

# If set to false, `cargo test` will omit the --test flag to rustc, which stops
# it from generating a test harness. This is useful when the binary being built
# manages the test runner itself.
#harness = true

# this could be "staticlib" as well
#crate-type = ["dylib"]